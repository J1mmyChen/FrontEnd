(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{186:function(e,t,n){"use strict";n.r(t);var s=n(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"content"},[t("h3",{attrs:{id:"promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise","aria-hidden":"true"}},[this._v("#")]),this._v(" Promise")]),t("p",[this._v("异步编程的解决方案，比传统的回调函数和事件更合理和强大。")]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("\nvar promise = new Promise(function(resolve,reject){\n\t// ...some code\n\n\n\tif(/*****/)}{\n\t\tresolve(value); // Promise的状态从未完成到成功。\n\t}else{\n\t\treject(error); // Promise的状态从未完成到失败。\n\t}\n\n});\n\npromise.then(function(value){\n\t// success\n},function(error){\n\t// error\n});\n\n")])])])])}],!1,null,null,null);r.options.__file="Promise.md";t.default=r.exports}}]);